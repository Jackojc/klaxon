// TOKENS
int ::= ? [0-9_]+ ? | ? 0x[0-9A-z_]+ ? | ? 0b[0-1_]+ ? | ? 0o[0-7_]+ ?
identifier ::= ? \S+ ?
comment ::= ? #.+$ ?


// GRAMMAR
effect ::= '(' <int> '->' <int> ')'

def ::= 'def' <identifier> <effect> <block>+ 'ret'
block ::= 'block' <int> <effect> <instruction>+ 'end'

instruction ::=
	( 'copy' | 'remove' | 'move' | 'push' | 'jump' ) <int> |
	( 'branch' <int> <int> ) |
	( 'call' <identifier> <effect> )

program ::= ( <def> | <block> )+

